'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,
getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";var __name__="django.core.exceptions";export var FieldDoesNotExist=__class__("FieldDoesNotExist",[Exception],{__module__:__name__});export var AppRegistryNotReady=__class__("AppRegistryNotReady",[Exception],{__module__:__name__});export var ObjectDoesNotExist=
__class__("ObjectDoesNotExist",[Exception],{__module__:__name__,silent_variable_failure:true});export var MultipleObjectsReturned=__class__("MultipleObjectsReturned",[Exception],{__module__:__name__});export var SuspiciousOperation=__class__("SuspiciousOperation",[Exception],{__module__:__name__});export var SuspiciousMultipartForm=__class__("SuspiciousMultipartForm",[SuspiciousOperation],{__module__:__name__});export var SuspiciousFileOperation=__class__("SuspiciousFileOperation",[SuspiciousOperation],
{__module__:__name__});export var DisallowedHost=__class__("DisallowedHost",[SuspiciousOperation],{__module__:__name__});export var DisallowedRedirect=__class__("DisallowedRedirect",[SuspiciousOperation],{__module__:__name__});export var TooManyFieldsSent=__class__("TooManyFieldsSent",[SuspiciousOperation],{__module__:__name__});export var RequestDataTooBig=__class__("RequestDataTooBig",[SuspiciousOperation],{__module__:__name__});export var PermissionDenied=__class__("PermissionDenied",[Exception],
{__module__:__name__});export var ViewDoesNotExist=__class__("ViewDoesNotExist",[Exception],{__module__:__name__});export var MiddlewareNotUsed=__class__("MiddlewareNotUsed",[Exception],{__module__:__name__});export var ImproperlyConfigured=__class__("ImproperlyConfigured",[Exception],{__module__:__name__});export var FieldError=__class__("FieldError",[Exception],{__module__:__name__});export var NON_FIELD_ERRORS="__all__";export var ValidationError=__class__("ValidationError",[Exception],{__module__:__name__,
get __init__(){return __get__(this,function(self,message,code,params){if(typeof code=="undefined"||code!=null&&code.hasOwnProperty("__kwargtrans__"))var code=null;if(typeof params=="undefined"||params!=null&&params.hasOwnProperty("__kwargtrans__"))var params=null;__super__(ValidationError,"__init__")(self,message,code,params);if(isinstance(message,ValidationError))if(hasattr(message,"error_dict"))var message=message.error_dict;else if(!hasattr(message,"message"))var message=message.error_list;else{var __left0__=
tuple([message.message,message.code,message.params]);var message=__left0__[0];var code=__left0__[1];var params=__left0__[2]}if(isinstance(message,dict)){self.error_dict=dict({});for(var [field,messages]of message.py_items()){if(!isinstance(messages,ValidationError))var messages=ValidationError(messages);self.error_dict[field]=messages.error_list}}else if(isinstance(message,list)){self.error_list=list([]);for(var message of message){if(!isinstance(message,ValidationError))var message=ValidationError(message);
if(hasattr(message,"error_dict"))self.error_list.extend(sum(message.error_dict.py_values(),list([])));else self.error_list.extend(message.error_list)}}else{self.message=message;self.code=code;self.params=params;self.error_list=list([self])}})},get _get_message_dict(){return __get__(this,function(self){getattr(self,"error_dict");return dict(self)})},get _get_messages(){return __get__(this,function(self){if(hasattr(self,"error_dict"))return sum(dict(self).py_values(),list([]));return list(self)})},
get update_error_dict(){return __get__(this,function(self,error_dict){if(hasattr(self,"error_dict"))for(var [field,error_list]of self.error_dict.py_items())error_dict.py_setdefault(field,list([])).extend(error_list);else error_dict.py_setdefault(NON_FIELD_ERRORS,list([])).extend(self.error_list);return error_dict})},get __iter__(){return __get__(this,function*(self){if(hasattr(self,"error_dict"))for(var [field,errors]of self.error_dict.py_items())yield tuple([field,list(ValidationError(errors))]);
else for(var error of self.error_list){var message=error.message;if(error.params)var message=__mod__(message,error.params);yield str(message)}})},[Symbol.iterator](){return this.__iter__()},get __str__(){return __get__(this,function(self){if(hasattr(self,"error_dict"))return repr(dict(self));return repr(list(self))})},get __repr__(){return __get__(this,function(self){return __mod__("ValidationError(%s)",self)})}});Object.defineProperty(ValidationError,"messages",property.call(ValidationError,ValidationError._get_messages));
Object.defineProperty(ValidationError,"message_dict",property.call(ValidationError,ValidationError._get_message_dict));export var EmptyResultSet=__class__("EmptyResultSet",[Exception],{__module__:__name__});

//# sourceMappingURL=django.core.exceptions.map